@model Servicios.Model.Promocion
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h2>Editar</h2>
</div>

@using (Html.BeginForm("EditPromotion", "Promocion", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <br />
    <div class="content-wrapper">
        <div class="container-fluid">
            <div class="form-horizontal">
                <h4>Promociones</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <input type="hidden" name="PromocionID" value="@Model.PromocionID" />

                <div class="col-md-12 row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.FechaInicio, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @maxlength = "300" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.FechaFin, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductoID, "CategoriaId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ProductoID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductoID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PrecioPromocion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PrecioPromocion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PrecioPromocion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="submit" value="Guardar" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-10">
                                <button type="button" class="btn btn-default">
                                    @Html.ActionLink("Volver", "Index")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="file" id="files" name="files" value="@Model.UrlImagen" src="@ViewBag.ImageData" />
                                <br />
                                <img id="filePreview" width="100" height="100" class="img-responsive img-thumbnail img-rounded @(Model != null ? Model.UrlImagen != null ?  "prevImg-visible" : "prevImg-Nvisible" : "prevImg-Nvisible")" src="@ViewBag.ImageData" />
                                <output id="list"></output>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<script>
    //JavaScript to load the image
    function archivo(evt) {
        debugger;
        var files = evt.target.files; // FileList object

        //we get the image of the field "file".
        for (var i = 0, f; f = files[i]; i++) {
            //we only admit images.
            if (!f.type.match('image.*')) {
                continue;
            }

            var reader = new FileReader();

            reader.onload = (function (theFile) {
                return function (e) {
                    debugger;
                    //we create the image.
                    document.getElementById('filePreview').setAttribute('src', e.target.result);

                };
            })(f);

            reader.readAsDataURL(f);
        }
    }

    document.getElementById('files').addEventListener('change', archivo, false);
</script>



